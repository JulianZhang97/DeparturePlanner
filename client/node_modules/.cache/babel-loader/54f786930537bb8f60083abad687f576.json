{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\src\\\\components\\\\DirectionsMap.js\";\n\n/* global google */\nimport React, { Component } from 'react';\nimport { withScriptjs, GoogleMap, withGoogleMap, DirectionsRenderer } from 'react-google-maps';\nimport { compose, withProps, lifecycle } from 'recompose';\nvar MapWithADirectionsRenderer = compose(withProps({\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"75%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })\n}), // withState('mapPane', 'onMapLoad'),\n// withHandlers(() => {\n//   const refs = {\n//     map: undefined,\n//   }\n//   return {\n//     onMapMounted: () => ref => {\n//       refs.map = ref;\n//     },\n//     onMapChanged: ({ onMapLoad }) => () => {\n//       onMapLoad(refs.map)\n//     }\n//   }\n// }),\nwithScriptjs, withGoogleMap, lifecycle({\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var DirectionsService = new google.maps.DirectionsService();\n    DirectionsService.route({\n      origin: this.props.origin,\n      destination: this.props.destination,\n      travelMode: this.props.travelMode,\n      drivingOptions: this.props.drivingOptions\n    }, function (result, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        console.log(result.routes[0].legs[0]);\n\n        _this.setState({\n          directions: result\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n  }\n}))(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultCenter: new google.maps.LatLng(41.8507300, -87.6512600),\n    options: {\n      disableDefaultUI: true,\n      gestureHandling: \"none\"\n    } // ref={props.onMapMounted}\n    // onTilesLoaded={props.onMapChanged}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.directions && React.createElement(DirectionsRenderer, {\n    directions: props.directions,\n    panel: props.mapRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n});\n\nvar DirectionsMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DirectionsMap, _Component);\n\n  function DirectionsMap(props) {\n    _classCallCheck(this, DirectionsMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DirectionsMap).call(this, props));\n  }\n\n  _createClass(DirectionsMap, [{\n    key: \"render\",\n    value: function render() {\n      {\n        console.log(this.props);\n      }\n      return React.createElement(MapWithADirectionsRenderer, {\n        origin: this.props.testOrigin,\n        destination: this.props.testDest,\n        travelMode: this.props.travelMode,\n        drivingOptions: this.props.drivingOptions,\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + this.props.mapsAPI + \"&v=3.exp&libraries=geometry,drawing,places\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DirectionsMap;\n}(Component);\n\nexport { DirectionsMap as default };","map":{"version":3,"sources":["C:\\Users\\zhang\\OneDrive\\Documents\\Personal Projects\\departure-planner\\react-backend\\client\\src\\components\\DirectionsMap.js"],"names":["React","Component","withScriptjs","GoogleMap","withGoogleMap","DirectionsRenderer","compose","withProps","lifecycle","MapWithADirectionsRenderer","loadingElement","height","containerElement","mapElement","width","componentDidMount","DirectionsService","google","maps","route","origin","props","destination","travelMode","drivingOptions","result","status","DirectionsStatus","OK","console","log","routes","legs","setState","directions","error","LatLng","disableDefaultUI","gestureHandling","mapRef","DirectionsMap","testOrigin","testDest","mapsAPI"],"mappings":"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","sourcesContent":["/* global google */\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport { withScriptjs, GoogleMap, withGoogleMap, DirectionsRenderer} from 'react-google-maps';\r\nimport { compose, withProps, lifecycle} from 'recompose'\r\n\r\n\r\nconst MapWithADirectionsRenderer = compose(\r\n    withProps({\r\n      loadingElement: <div style={{ height: `100%` }} />,\r\n      containerElement: <div style={{ height: `400px` }} />,\r\n      mapElement: <div style={{ height: `75%`, width: `100%` }} />,\r\n    }),\r\n    // withState('mapPane', 'onMapLoad'),\r\n    // withHandlers(() => {\r\n    //   const refs = {\r\n    //     map: undefined,\r\n    //   }\r\n    //   return {\r\n    //     onMapMounted: () => ref => {\r\n    //       refs.map = ref;\r\n    //     },\r\n    //     onMapChanged: ({ onMapLoad }) => () => {\r\n    //       onMapLoad(refs.map)\r\n    //     }\r\n    //   }\r\n    // }),\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    lifecycle({\r\n      componentDidMount() {\r\n        const DirectionsService = new google.maps.DirectionsService();\r\n        DirectionsService.route({\r\n          origin: this.props.origin,\r\n          destination: this.props.destination,\r\n          travelMode: this.props.travelMode,\r\n          drivingOptions: this.props.drivingOptions}, \r\n          \r\n          (result, status) => {\r\n          if (status === google.maps.DirectionsStatus.OK) {\r\n            console.log(result.routes[0].legs[0]);\r\n            this.setState({\r\n              directions: result,\r\n            });\r\n          } else {\r\n            console.error(`error fetching directions ${result}`);\r\n          }\r\n        });\r\n      }\r\n    })\r\n  )(props =>\r\n    <GoogleMap\r\n      defaultCenter={new google.maps.LatLng(41.8507300, -87.6512600)}\r\n      options={({\r\n        disableDefaultUI: true,\r\n        gestureHandling: \"none\",\r\n  \r\n      })}\r\n  \r\n      // ref={props.onMapMounted}\r\n      // onTilesLoaded={props.onMapChanged}\r\n      >\r\n      {props.directions && \r\n      <DirectionsRenderer \r\n      directions={props.directions} \r\n      panel={props.mapRef}\r\n      />\r\n      }\r\n    </GoogleMap>\r\n  );\r\n\r\n\r\n\r\nexport default class DirectionsMap extends Component {  \r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        {console.log(this.props)}\r\n        return(\r\n            <MapWithADirectionsRenderer \r\n                    origin={this.props.testOrigin} \r\n                    destination={this.props.testDest} \r\n                    travelMode={this.props.travelMode} \r\n                    drivingOptions={this.props.drivingOptions}\r\n                    googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\" + this.props.mapsAPI + \"&v=3.exp&libraries=geometry,drawing,places\"}/> \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}