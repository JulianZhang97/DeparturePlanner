{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zhang\\\\OneDrive\\\\Documents\\\\Personal Projects\\\\departure-planner\\\\react-backend\\\\client\\\\src\\\\components\\\\DirectionsMap.js\";\n\n/* global google */\nimport React, { Component } from 'react';\nimport { withScriptjs, GoogleMap, withGoogleMap, DirectionsRenderer, TrafficLayer } from 'react-google-maps';\nimport { compose, withProps, lifecycle } from 'recompose';\nvar MapWithADirectionsRenderer = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_GOOGLE_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"75%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })\n}), // withState('mapPane', 'onMapLoad'),\n// withHandlers(() => {\n//   const refs = {\n//     map: undefined,\n//   }\n//   return {\n//     onMapMounted: () => ref => {\n//       refs.map = ref;\n//     },\n//     onMapChanged: ({ onMapLoad }) => () => {\n//       onMapLoad(refs.map)\n//     }\n//   }\n// }),\nwithScriptjs, withGoogleMap, lifecycle({// componentDidMount() {\n  //   const DirectionsService = new google.maps.DirectionsService();\n  //   DirectionsService.route({\n  //     origin: this.props.origin,\n  //     destination: this.props.destination,\n  //     travelMode: this.props.travelMode,\n  //     drivingOptions: this.props.drivingOptions}, \n  //     (result, status) => {\n  //     if (status === google.maps.DirectionsStatus.OK) {\n  //       console.log(result.routes[0].legs[0]);\n  //       this.setState({\n  //         directions: result,\n  //       });\n  //     } else {\n  //       console.error(`error fetching directions ${result}`);\n  //     }\n  //   });\n  // }\n}))(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultCenter: new google.maps.LatLng(41.8507300, -87.6512600),\n    options: {\n      disableDefaultUI: true,\n      gestureHandling: \"none\"\n    } // ref={props.onMapMounted}\n    // onTilesLoaded={props.onMapChanged}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, console.log(props), props.directions && React.createElement(DirectionsRenderer, {\n    directions: props.directions,\n    panel: props.mapRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(TrafficLayer, {\n    autoUpdate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n});\n\nvar DirectionsMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DirectionsMap, _Component);\n\n  function DirectionsMap() {\n    _classCallCheck(this, DirectionsMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DirectionsMap).apply(this, arguments));\n  }\n\n  _createClass(DirectionsMap, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapWithADirectionsRenderer, {\n        directions: this.props.directions,\n        googleMapURL: this.props.googleMapURL // origin={this.props.origin} \n        // destination={this.props.destination} \n        // travelMode={this.props.travelMode} \n        // drivingOptions={this.props.drivingOptions}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DirectionsMap;\n}(Component);\n\nexport { DirectionsMap as default };","map":{"version":3,"sources":["C:\\Users\\zhang\\OneDrive\\Documents\\Personal Projects\\departure-planner\\react-backend\\client\\src\\components\\DirectionsMap.js"],"names":["React","Component","withScriptjs","GoogleMap","withGoogleMap","DirectionsRenderer","TrafficLayer","compose","withProps","lifecycle","MapWithADirectionsRenderer","googleMapURL","process","env","REACT_APP_GOOGLE_API_KEY","loadingElement","height","containerElement","mapElement","width","props","google","maps","LatLng","disableDefaultUI","gestureHandling","console","log","directions","mapRef","DirectionsMap"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,aAAlC,EAAiDC,kBAAjD,EAAqEC,YAArE,QAAwF,mBAAxF;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA6C,WAA7C;AAGA,IAAMC,0BAA0B,GAAGH,OAAO,CACtCC,SAAS,CAAC;AACRG,EAAAA,YAAY,EAAE,iDAAiDC,OAAO,CAACC,GAAR,CAAYC,wBAA7D,GAAwF,4CAD9F;AAERC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIRE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,OAAR;AAAiBG,MAAAA,KAAK;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CAAD,CAD6B,EAOtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,YArBsC,EAsBtCE,aAtBsC,EAuBtCK,SAAS,CAAC,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBQ,CAAD,CAvB6B,CAAP,CA4C/B,UAAAW,KAAK;AAAA,SACL,oBAAC,SAAD;AACE,IAAA,aAAa,EAAE,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CADjB;AAEE,IAAA,OAAO,EAAG;AACRC,MAAAA,gBAAgB,EAAE,IADV;AAERC,MAAAA,eAAe,EAAE;AAFT,KAFZ,CAQE;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGC,OAAO,CAACC,GAAR,CAAYP,KAAZ,CAXH,EAaGA,KAAK,CAACQ,UAAN,IACD,oBAAC,kBAAD;AACA,IAAA,UAAU,EAAER,KAAK,CAACQ,UADlB;AAEA,IAAA,KAAK,EAAER,KAAK,CAACS,MAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAmBE,oBAAC,YAAD;AAAc,IAAA,UAAU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADK;AAAA,CA5C0B,CAAnC;;IAsEqBC,a;;;;;;;;;;;;;6BACT;AACJ,aACI,oBAAC,0BAAD;AACQ,QAAA,UAAU,EAAE,KAAKV,KAAL,CAAWQ,UAD/B;AAEQ,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWT,YAFjC,CAGQ;AACA;AACA;AACA;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH;;;;EAZsCV,S;;SAAtB6B,a","sourcesContent":["/* global google */\r\n\r\nimport React, { Component } from 'react';\r\nimport { withScriptjs, GoogleMap, withGoogleMap, DirectionsRenderer, TrafficLayer} from 'react-google-maps';\r\nimport { compose, withProps, lifecycle} from 'recompose'\r\n\r\n\r\nconst MapWithADirectionsRenderer = compose(\r\n    withProps({\r\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_GOOGLE_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\",\r\n      loadingElement: <div style={{ height: `100%` }} />,\r\n      containerElement: <div style={{ height: `400px` }} />,\r\n      mapElement: <div style={{ height: `75%`, width: `100%` }} />,\r\n    }),\r\n    // withState('mapPane', 'onMapLoad'),\r\n    // withHandlers(() => {\r\n    //   const refs = {\r\n    //     map: undefined,\r\n    //   }\r\n    //   return {\r\n    //     onMapMounted: () => ref => {\r\n    //       refs.map = ref;\r\n    //     },\r\n    //     onMapChanged: ({ onMapLoad }) => () => {\r\n    //       onMapLoad(refs.map)\r\n    //     }\r\n    //   }\r\n    // }),\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    lifecycle({\r\n      // componentDidMount() {\r\n      //   const DirectionsService = new google.maps.DirectionsService();\r\n      //   DirectionsService.route({\r\n      //     origin: this.props.origin,\r\n      //     destination: this.props.destination,\r\n      //     travelMode: this.props.travelMode,\r\n      //     drivingOptions: this.props.drivingOptions}, \r\n          \r\n      //     (result, status) => {\r\n      //     if (status === google.maps.DirectionsStatus.OK) {\r\n      //       console.log(result.routes[0].legs[0]);\r\n      //       this.setState({\r\n      //         directions: result,\r\n      //       });\r\n      //     } else {\r\n      //       console.error(`error fetching directions ${result}`);\r\n      //     }\r\n      //   });\r\n      // }\r\n    })\r\n  )(props =>\r\n    <GoogleMap\r\n      defaultCenter={new google.maps.LatLng(41.8507300, -87.6512600)}\r\n      options={({\r\n        disableDefaultUI: true,\r\n        gestureHandling: \"none\",\r\n  \r\n      })}\r\n  \r\n      // ref={props.onMapMounted}\r\n      // onTilesLoaded={props.onMapChanged}\r\n      >\r\n      {console.log(props)}\r\n\r\n      {props.directions && \r\n      <DirectionsRenderer \r\n      directions={props.directions} \r\n      panel={props.mapRef}\r\n      />\r\n      }\r\n      <TrafficLayer autoUpdate />\r\n    </GoogleMap>\r\n  );\r\n\r\n\r\n\r\nexport default class DirectionsMap extends Component {  \r\n    render(){\r\n        return(\r\n            <MapWithADirectionsRenderer \r\n                    directions={this.props.directions}\r\n                    googleMapURL={this.props.googleMapURL}\r\n                    // origin={this.props.origin} \r\n                    // destination={this.props.destination} \r\n                    // travelMode={this.props.travelMode} \r\n                    // drivingOptions={this.props.drivingOptions}\r\n                    /> \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}